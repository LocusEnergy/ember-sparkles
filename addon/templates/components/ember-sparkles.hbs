<g transform="translate({{marginLeft}},{{marginTop}})">

  {{#with (hash
    x-scale=(r (i '${t}-scale' t=(or x-scale-type 'linear'))
      x-domain
      (append 0 innerWidth)
      round=true
      padding=0.2
    )
    y-scale=(r (i '${t}-scale' t=(or y-scale-type 'linear'))
      y-domain
      (append innerHeight 0)
    )
    color-scale=(cat-color-scale (or color-scale-type '20b') domain=group-domain)
    transition=(e-s/transition duration=(or transition-duration 1000) data=data)
    inputKey=(r/get (or input-key 0))
    outputKey=(r/get (or output-key 1))
  ) as |options|}}

    {{yield (hash
      x-scale=(compute options.x-scale)
      y-scale=(compute options.y-scale)
      
      x-axis=(component 'e-s/axis'
        scale=(compute options.x-scale)
        position='bottom'
        height=innerHeight
        transition=options.transition
        label-attrs=(pipe (d3-attr 'x' width))
      )

      y-axis=(component 'e-s/axis'
        scale=(compute options.y-scale)
        position='left'
        width=innerWidth
        transition=options.transition
        label-attrs=(pipe (d3-attr 'transform' 'rotate(-90)'))
      )

      bar-chart=(component 'e-s/bar-chart'
        data=data
        xScale=(compute options.x-scale)
        yScale=(compute options.y-scale)

        inputKey=options.inputKey
        outputKey=options.outputKey

        transition=options.transition
        width=innerWidth
        height=innerHeight
      )

      grouped-bar-chart=(component 'e-s/grouped-bar-chart'
        data=data
        xScale=(compute options.x-scale)
        yScale=(compute options.y-scale)
        colorScale=options.color-scale
        groupScale=(band-scale
          group-domain
          (append 0 (compute (get (compute options.x-scale) 'bandwidth')))
          padding=(or group-padding 0.05)
        )

        inputKey=options.inputKey
        outputKey=options.outputKey
        groupKey=(r/get group-key)
        valueKey=(r/get value-key)

        transition=options.transition
        width=innerWidth
        height=innerHeight
      )

      line-chart=(component 'e-s/line-chart'
        data=data
        xScale=(compute options.x-scale)
        yScale=(compute options.y-scale)
        colorScale=options.color-scale

        inputKey=options.inputKey
        outputKey=options.outputKey
        groupKey=(r/get (or group-key ''))

        transition=options.transition
        width=innerWidth
        height=innerHeight
      )

      pie-chart=(component 'e-s/pie-chart'
        data=(e-s/pie-data data valueKey=output-key threshold=arc-threshold precision=arc-precision)
        width=innerWidth
        height=innerHeight

        outputKey=options.outputKey
        groupKey=(r/get (concat 'data.' group-key))

        colorScale=options.color-scale
        radius=(div (d3-array 'min' (array innerWidth innerHeight)) 2)
        transition=options.transition
      )

      legend=(component 'e-s/legend'
        width=innerWidth
        height=innerHeight
        domain=group-domain
        colorScale=options.color-scale
        transition=options.transition
        shape=(or shape 'rect')
        dx=(or dx 0)
        dy=(or dy 0)
      )

      width=innerWidth
      height=innerHeight
      transition=options.transition
    )}}

  {{/with}}
</g>
